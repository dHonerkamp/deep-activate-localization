#references
# https://stackoverflow.com/questions/58269375/how-to-install-packages-with-miniconda-in-dockerfile
# https://superuser.com/questions/1582294/how-to-run-a-conda-command-inside-singularity

Bootstrap:docker
From:tensorflow/tensorflow:latest-gpu

%labels
AUTHOR Suresh Guttikonda

%post
    apt-get -y update && apt-get -y install locales
    locale-gen de_DE.UTF-8 # change this if your are facing locale errors

    apt-get -y update && apt-get -y install make \
                                            dpkg \
                                            wget \
                                            bzip2 \
                                            libglib2.0-0 \
                                            libxext6 \
                                            libsm6 \
                                            libxrender1 \
                                            g++ \
                                            gcc \
                                            xvfb \
                                            libyaml-cpp-dev \
                                            git \
                                            cmake \
                                            vim \
                                            curl \
                                            ca-certificates \
                                            software-properties-common \
                                            python3 \
                                            python3-pip \
                                            python3-venv \
                                            gdb \
                                            libopenexr-dev \
                                            zlib1g-dev \
                                            xserver-xorg \
                                            freeglut3-dev \
                                            mesa-utils \
                                            libreadline-dev \
                                            gnuplot \
                                            gnuplot-qt \
                                            unzip \
                                            libboost-all-dev \
                                            libnss3 \
                                            libgconf-2-4 \
                                            libasound2 \
                                            libsecret-1-0 \
                                            libnss3 \
                                            libgconf-2-4 \
                                            libasound2 \
                                            libatk-adaptor \
                                            libgail-common \
                                            libcanberra-gtk-module \
                                            gtk2-engines \
                                            gtk2-engines-*

    # cleanup
    rm -rf /var/lib/apt/lists/*
    apt-get clean

    #NOTE: to persist changes need to install packages at different location other than default /root

    # setup virtualenv
    python3 -m venv --system-site-packages /opt/venvs/py3-igibson
    . /opt/venvs/py3-igibson/bin/activate
    python3 -m pip install --upgrade pip

    # install igibson packages
    git clone --branch master https://github.com/StanfordVL/iGibson /opt/igibson --recursive
    cd /opt/igibson
    pip3 install -e .

    # install igibson custom pybullet
    pip3 uninstall -y pybullet
    pip3 install https://github.com/StanfordVL/bullet3/archive/master.zip

    # install custom tf-agents
    # git clone --branch cvpr21_challenge_tf2.4 https://github.com/StanfordVL/agents/ /opt/agents --recursive
    git clone --branch cvpr21_challenge_tf2.4 https://github.com/suresh-guttikonda/agents/ /opt/agents --recursive
    cd /opt/agents
    pip3 install -e .

    # install reverb
    pip3 install dm-reverb

    # download the required assets
    python -m gibson2.utils.assets_utils --download_assets
    python -m gibson2.utils.assets_utils --download_demo_data

    # install Pycharm Professional
    wget https://download.jetbrains.com/python/pycharm-professional-2021.1.1.tar.gz
    tar xzf pycharm-professional-2021.1.1.tar.gz -C /opt/
